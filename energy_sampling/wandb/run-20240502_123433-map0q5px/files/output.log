GFN(
  (t_model): TimeEncodingPIS(
    (t_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (s_model): StateEncodingPIS(
    (x_model): Linear(in_features=66, out_features=64, bias=True)
  )
  (joint_model): JointPolicyPIS(
    (model): Sequential(
      (0): GELU(approximate='none')
      (1): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Linear(in_features=64, out_features=132, bias=True)
    )
  )
  (langevin_scaling_model): LangevinScalingModelPIS(
    (lgv_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (2): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (3): GELU(approximate='none')
      (4): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
tensor([[          inf],
        [ 3749493.7500],
        [          inf],
        [          inf],
        [          inf],
        [ 3407179.2500],
        [          inf],
        [ 6039676.0000],
        [          inf],
        [          inf],
        [          inf],
        [ 3823953.0000],
        [          inf],
        [          inf],
        [ 3563913.5000],
        [          inf],
        [          inf],
        [          inf],
        [ 2804102.5000],
        [          inf],
        [ 3650234.2500],
        [ 1765963.6250],
        [          inf],
        [          inf],
        [ 2523103.0000],
        [ 5264685.5000],
        [          inf],
        [          inf],
        [ 9283146.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 4732408.5000],
        [          inf],
        [          inf],
        [          inf],
        [ 3752265.5000],
        [          inf],
        [ 3284719.0000],
        [ 2842484.7500],
        [          inf],
        [ 3138010.5000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 1626249.8750],
        [ 4547144.0000],
        [ 1687042.8750],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 1900428.1250],
        [          inf],
        [ 1238708.7500],
        [ 5126515.5000],
        [ 3838050.2500],
        [ 4030335.7500],
        [ 3610507.5000],
        [          inf],
        [ 3393658.7500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 2674958.7500],
        [          inf],
        [          inf],
        [ 3197831.5000],
        [          inf],
        [          inf],
        [ 2626610.0000],
        [ 2401636.5000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 2932855.7500],
        [ 4403784.5000],
        [          inf],
        [ 2801281.2500],
        [ 5460041.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 3750902.0000],
        [          inf],
        [          inf],
        [ 4333384.5000],
        [ 6738296.5000],
        [ 3265228.2500],
        [          inf],
        [          inf],
        [ 2423271.2500],
        [          inf],
        [ 7575575.5000],
        [ 3208546.0000],
        [ 1917189.1250],
        [ 3168229.2500],
        [          inf],
        [ 2112148.5000],
        [          inf],
        [          inf],
        [ 4647515.0000],
        [ 4357469.0000],
        [          inf],
        [ 3947930.7500],
        [  967795.1875],
        [          inf],
        [10060677.0000],
        [ 4677357.0000],
        [ 4961798.0000],
        [          inf],
        [          inf],
        [ 2831429.5000],
        [ 3304496.7500],
        [          inf],
        [ 3994591.5000],
        [          inf],
        [          inf],
        [ 2523216.2500],
        [ 4466867.5000],
        [          inf],
        [ 5942882.5000],
        [          inf],
        [ 1528873.2500],
        [          inf],
        [          inf],
        [ 4673267.0000],
        [ 2234496.7500],
        [          inf],
        [          inf],
        [ 4083608.0000],
        [          inf],
        [          inf],
        [          inf],
        [ 2552171.7500],
        [          inf],
        [          inf],
        [ 3079689.0000],
        [          inf],
        [ 3113075.5000],
        [ 4464106.0000],
        [          inf],
        [ 3826910.7500],
        [ 2745226.2500],
        [          inf],
        [ 2796340.0000],
        [          inf],
        [ 2628557.0000],
        [ 2186582.7500],
        [ 3591840.2500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 2326026.7500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 3157679.2500],
        [ 2392750.2500],
        [          inf],
        [          inf],
        [          inf],
        [ 2646185.7500],
        [ 2719314.5000],
        [ 3754530.5000],
        [ 2538878.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 3928170.5000],
        [          inf],
        [          inf],
        [ 4031514.7500],
        [          inf],
        [          inf],
        [ 3719820.5000],
        [          inf],
        [          inf],
        [          inf],
        [ 2124835.0000],
        [ 1503202.1250],
        [ 4647746.5000],
        [          inf],
        [          inf],
        [ 3191072.7500],
        [          inf],
        [          inf],
        [ 2875092.7500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 1300539.7500],
        [          inf],
        [          inf],
        [          inf],
        [ 2649192.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 3451395.7500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 2563720.7500],
        [ 2299121.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 3748514.5000],
        [ 3779708.7500],
        [          inf],
        [          inf],
        [ 3710493.0000],
        [          inf],
        [ 3755026.5000],
        [          inf],
        [ 5488724.5000],
        [ 5392173.0000],
        [ 2575837.7500],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 2886405.0000],
        [ 2035814.0000],
        [ 3011459.2500],
        [          inf],
        [ 2811601.2500],
        [          inf],
        [          inf],
        [ 2150742.2500],
        [          inf],
        [          inf],
        [          inf],
        [ 2604854.0000],
        [ 3050343.0000],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [          inf],
        [ 5609193.0000],
        [          inf],
        [ 2029247.0000],
        [          inf],
        [          inf],
        [          inf],
        [ 3056163.2500],
        [          inf],
        [          inf],
        [          inf],
        [ 4304428.0000],
        [          inf],
        [          inf],
        [          inf],
        [ 2649177.7500],
        [          inf],
        [ 5916981.5000],
        [ 4884992.5000],
        [ 3176508.0000],
        [          inf],
        [ 3376633.0000],
        [          inf],
        [          inf],
        [ 3438978.2500],
        [          inf],
        [          inf],
        [          inf],
        [ 4303205.5000],
        [          inf]], device='cuda:0')
tensor([[inf],
        [inf],
        [inf],
        ...,
        [inf],
        [inf],
        [inf]], device='cuda:0')
{'train/loss': inf, 'eval/log_Z': tensor([nan, nan, nan,  ..., nan, nan, nan], device='cuda:0'), 'eval/log_Z_lb': tensor(nan, device='cuda:0'), 'eval/log_Z_learned': tensor(nan, device='cuda:0'), 'eval/mean_log_likelihood': tensor(nan, device='cuda:0'), '1-Wasserstein': 0.0, '2-Wasserstein': 0.0, 'Linear_MMD': 0, 'Poly_MMD': 0, 'RBF_MMD': 0, 'Mean_MSE': 0, 'Mean_L2': 0, 'Mean_L1': 0, 'Median_MSE': 0, 'Median_L2': 0, 'Median_L1': 0}
  0%|                                                                                    | 0/25001 [00:00<?, ?it/s]/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/bgflow-0.3.0+19.gfbba56f-py3.8.egg/bgflow/distribution/energy/openmm.py:513: UserWarning: Suppressed exception: Particle coordinate is NaN.  For more information, see https://github.com/openmm/openmm/wiki/Frequently-Asked-Questions#nan
/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/ot/lp/__init__.py:571: UserWarning: Problem unbounded
  check_result(result_code)
  0%|                                                                                    | 0/25001 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 347, in <module>
    train()
  File "train.py", line 319, in train
    wandb.log(metrics, step=i)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 420, in wrapper
    return func(self, *args, **kwargs)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 371, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 361, in wrapper
    return func(self, *args, **kwargs)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1838, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1602, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 1474, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/interface/interface.py", line 596, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/util.py", line 842, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/util.py", line 804, in default
    obj, compressed = maybe_compress_history(obj)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/util.py", line 705, in maybe_compress_history
    return wandb.Histogram(obj, num_bins=32).to_json(), True
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/wandb/sdk/data_types/histogram.py", line 77, in __init__
    self.histogram, self.bins = np.histogram(sequence, bins=num_bins)
  File "<__array_function__ internals>", line 200, in histogram
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/numpy/lib/histograms.py", line 780, in histogram
    bin_edges, uniform_bins = _get_bin_edges(a, bins, range, weights)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/numpy/lib/histograms.py", line 426, in _get_bin_edges
    first_edge, last_edge = _get_outer_edges(a, range)
  File "/home/radoslavralev/miniconda3/envs/gfn-diffusion/lib/python3.8/site-packages/numpy/lib/histograms.py", line 323, in _get_outer_edges
    raise ValueError(
ValueError: autodetected range of [nan, nan] is not finite